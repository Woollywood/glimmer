export enum AuthErrors {
	AccessDenied = 'AccessDenied',
	AccountNotLinked = 'AccountNotLinked',
	AdapterError = 'AdapterError',
	AuthError = 'AuthError',
	CallbackRouteError = 'CallbackRouteError',
	CredentialsSignin = 'CredentialsSignin',
	DuplicateConditionalUI = 'DuplicateConditionalUI',
	EmailSignInError = 'EmailSignInError',
	ErrorPageLoop = 'ErrorPageLoop',
	EventError = 'EventError',
	ExperimentalFeatureNotEnabled = 'ExperimentalFeatureNotEnabled',
	InvalidCallbackUrl = 'InvalidCallbackUrl',
	InvalidCheck = 'InvalidCheck',
	InvalidEndpoints = 'InvalidEndpoints',
	InvalidProvider = 'InvalidProvider',
	JWTSessionError = 'JWTSessionError',
	MissingAdapter = 'MissingAdapter',
	MissingAdapterMethods = 'MissingAdapterMethods',
	MissingAuthorize = 'MissingAuthorize',
	MissingCSRF = 'MissingCSRF',
	MissingSecret = 'MissingSecret',
	MissingWebAuthnAutocomplete = 'MissingWebAuthnAutocomplete',
	OAuthAccountNotLinked = 'OAuthAccountNotLinked',
	OAuthCallbackError = 'OAuthCallbackError',
	OAuthProfileParseError = 'OAuthProfileParseError',
	OAuthSignInError = 'OAuthSignInError',
	SessionTokenError = 'SessionTokenError',
	SignInError = 'SignInError',
	SignOutError = 'SignOutError',
	UnknownAction = 'UnknownAction',
	UnsupportedStrategy = 'UnsupportedStrategy',
	UntrustedHost = 'UntrustedHost',
	Verification = 'Verification',
	WebAuthnVerificationError = 'WebAuthnVerificationError',
}

export const authErrorDescription: Record<AuthErrors, string> = {
	AccessDenied: 'Access denied',
	AccountNotLinked: 'Email address is already associated with an account',
	AdapterError: 'One of the database Adapter methods failed during execution',
	AuthError: 'Authentication failed',
	CallbackRouteError: 'Something went wrong',
	CredentialsSignin: 'Authorize callback exception',
	DuplicateConditionalUI: 'Duplicate conditional UI',
	EmailSignInError: 'Sign in by an Email provider could not be started',
	ErrorPageLoop: 'Infinite page loop',
	EventError: 'One of the events methods failed during execution',
	ExperimentalFeatureNotEnabled: 'Experimental feature is used but not enabled',
	InvalidCallbackUrl:
		'Unable to verify a callbackUrl value. The browser either disabled cookies or the callbackUrl is not a valid URL',
	InvalidCheck: 'PKCE, state or nonce OAuth check could not be performed',
	InvalidEndpoints:
		'One of the configured OAuth or OIDC providers is missing the authorization, token or userinfo, or issuer configuration',
	InvalidProvider: 'Endpoint was incorrectly called without a provider, or with an unsupported provider',
	JWTSessionError: 'Could not decode or encode a JWT-based (strategy: "jwt") session',
	MissingAdapter: 'Missing adapter',
	MissingAdapterMethods: "Missing some required adapter's methods",
	MissingAuthorize: 'Missing authorize method',
	MissingCSRF: 'Missing CSRF tokens',
	MissingSecret: 'Secret or multiple secrets must be set, but none was not found',
	MissingWebAuthnAutocomplete:
		'WebAuthn provider has enable conditional UI set to true but no formField has webauthn in its autocomplete param',
	OAuthAccountNotLinked:
		'Email address is already associated with an account but the user is trying an OAuth account that is not linked to it',
	OAuthCallbackError: 'OAuth provider returns an error during the sign in process',
	OAuthProfileParseError: 'OAuth sign in attempt when the provider’s response could not be parsed',
	OAuthSignInError: 'Sign in by OAuth could not be started',
	SessionTokenError: 'Session token error',
	SignInError: 'Sign in error',
	SignOutError: 'An error occurs during the sign-out process',
	UnknownAction: 'Requested to handle an operation that it does not support',
	UnsupportedStrategy: 'Credentials provider is present but the JWT strategy is not enabled',
	UntrustedHost: 'trustHost option was not set to true',
	Verification: 'The user’s email/token combination was invalid',
	WebAuthnVerificationError: 'WebAuthn provider fails to verify a client response',
};
